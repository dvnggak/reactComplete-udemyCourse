{"version":3,"file":"static/js/884.c019a1a9.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCsEnI,EAhEkB,SAACH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAE1BC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACE,UAAC,EAAAE,SAAQ,YACP,SAAC,KAAM,CACLC,KAAMN,EACNO,QAAS,SAACC,GAAQ,MAChB,6DAA6D,KAGjE,SAAC,EAAI,WACH,kBACEC,QAlBiB,WACvBR,GAAc,EAChB,EAiBQL,UAAWC,EACXa,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCpB,EAAMsB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAsBoC,UAE3BrB,EAAMyB,YACL,gBAAKxB,UAAWC,EAAgB,UAC9B,SAACwB,EAAA,EAAc,OAInB,iBAAKzB,UAAWC,EAAgB,WAC9B,kBAAOyB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKvB,QAEtC,iBAAKN,UAAWC,EAAgB,WAC9B,kBAAOyB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKrB,QAEpC,gBAAKR,UAAWC,EAAgB,UAC9B,mBAAQ8B,QAjCQ,WACxB1B,GAAc,EAChB,EA+B8CL,UAAU,MAAK,gCAQ/D,E,kBC1CA,EAnBiB,WACf,OAAgCgC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEjB,GAAG,CAACJ,EAAQC,IAMZ,OACE,SAAC,EAAS,CAACZ,UAAsB,YAAXW,EAAsBd,WALtB,SAACmB,GACvBN,EAAYM,EACd,GAKF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__xJXC2\"};","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__TsSum\",\"loading\":\"QuoteForm_loading__4VQI4\",\"control\":\"QuoteForm_control__Db+Bp\",\"actions\":\"QuoteForm_actions__mUf3A\"};","import { Fragment, useRef, useState } from \"react\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./QuoteForm.module.css\";\r\n\r\nconst QuoteForm = (props) => {\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const formFocusHandler = () => {\r\n    setIsEntering(true);\r\n  };\r\n\r\n  const onAddQuoteHandler = () => {\r\n    setIsEntering(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Prompt\r\n        when={isEntering}\r\n        message={(location) =>\r\n          \"Are you sure want to leave ? Your entered data will be lost\"\r\n        }\r\n      />\r\n      <Card>\r\n        <form\r\n          onFocus={formFocusHandler}\r\n          className={classes.form}\r\n          onSubmit={submitFormHandler}\r\n        >\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"author\">Author</label>\r\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"text\">Text</label>\r\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={onAddQuoteHandler} className=\"btn\">\r\n              Add Quote\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nimport { addQuote } from \"../lib/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}